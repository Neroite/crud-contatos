@using Lopobia.Enum
@model UsuarioModel
@{
	ViewData["Title"] = "Editar Contato";
}

<div>
	<br>
	<h1 class="text-center">
		Editar Usuário
	</h1>
	<br>

	<form asp-action="Editar" asp-controller="Usuario" method="post">

		<input type="hidden" asp-for="Id">

		<div class="mb-3">
			<label for="Input1" class="form-label">Nome</label>
			<input asp-for="Nome" type="text" class="form-control" placeholder="Koon Aguero">
			@Html.ValidationMessageFor(x => x.Nome)
		</div>
		<div class="mb-3">
			<label for="Input2" class="form-label">Email</label>
			<input asp-for="Email" type="text" class="form-control" placeholder="name@example.com">
			@Html.ValidationMessageFor(x => x.Email)
		</div>
		<div class="mb-3">
			<label for="Input3" class="form-label">Login</label>
			<input asp-for="Login" type="text" class="form-control" placeholder="Usuario1">
			@Html.ValidationMessageFor(x => x.Login)
		</div>
		<div class="mb-3">
			<label for="Input4" class="form-label">Perfil</label>
			<select asp-for="Perfil" class="form-control">
				<option value="">Selecione</option>
				<option value="@PerfilEnum.Admin">Admin</option>
				<option value="@PerfilEnum.Padrao">Padrao </option>
			</select>
			@Html.ValidationMessageFor(x => x.Perfil)
		</div>
		<div class="mb-3">
			<label for="Input5" class="form-label">Senha</label>
			<input asp-for="Senha" type="text" class="form-control" placeholder="123">
			@Html.ValidationMessageFor(x => x.Senha)
		</div>
		<br>
		<div class="d-grid gap-2">
			<button type="submit" class="btn btn-outline-primary">Editar</button>
			<a type="button" class="btn btn-outline-dark" type="button" asp-controller="Usuario" asp-action="Index">Voltar</a>
		</div>
	</form>
</div>
